name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint || echo "No lint script found"

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Test CLI functionality
      run: |
        # Test that the CLI can be executed
        node bin/unbox.js --help
        node bin/unbox.js --version

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Test package
      run: |
        # Test that the package can be packed
        npm pack
        # Test that the CLI works from the packed version
        tar -tzf *.tgz | head -20

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          bin/
          package.json
          README.md
          LICENSE

  publish:
    name: Publish to NPM and Create Release
    runs-on: ubuntu-latest
    needs: [test, build]
    if: "github.event_name == 'push' && github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'chore: release')"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm test

    - name: Extract version from package.json
      id: package-version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Create Git tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "v${{ steps.package-version.outputs.version }}"
        git push origin "v${{ steps.package-version.outputs.version }}"

    - name: Extract changelog for current version
      id: changelog
      run: |
        # Extract changelog content between version headers
        VERSION="v${{ steps.package-version.outputs.version }}"
        CHANGELOG_CONTENT=$(awk "/## \[$VERSION\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md || echo "Release $VERSION")
        # Save to file to handle multiline content
        echo "$CHANGELOG_CONTENT" > /tmp/changelog.txt
        {
          echo "content<<EOF"
          cat /tmp/changelog.txt
          echo "EOF"
        } >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.package-version.outputs.version }}"
        name: "Release v${{ steps.package-version.outputs.version }}"
        body: "${{ steps.changelog.outputs.content }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: npm audit --audit-level=high --production
